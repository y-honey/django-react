stackName: "${env:PROJECT_NAME}-workers"

iam: []

environment: {}

ScheduleTask:
  environment: {}

ExecuteScheduledTask:
  environment: {}

SendEmail:
  handler: emails/handlers.sendEmailLocal
  environment:
    AWS_ENDPOINT_URL: "http://localstack:4566"
    FROM_EMAIL: "from@example.com"
    WEB_APP_URL: "http://localhost:3000"

SynchronizeContentfulContent:
  environment:
    DB_CONNECTION: "${env:DB_CONNECTION,''}"
    CONTENTFUL_SPACE_ID: "${env:CONTENTFUL_SPACE_ID,''}"
    CONTENTFUL_ACCESS_TOKEN: "${env:CONTENTFUL_ACCESS_TOKEN,''}"
    CONTENTFUL_ENVIRONMENT: "${env:CONTENTFUL_ENVIRONMENT,''}"

WebSocketsHandler:
  environment: []

ExportUsers:
  environment:
    AWS_ENDPOINT_URL: "http://localstack:4566"
    AWS_EXPORTS_STORAGE_BUCKET_NAME: "exports-bucket"

vpc: {}

esbuild:
  bundle: true
  minify: false
  target: [ 'es2020' ]
  sourcemap: false
  sourcesContent: false
  define: { 'require.resolve': undefined }

websocketApiId: { Fn::ImportValue: "${self:custom.projectEnvName}-webSocketApiId" }
eventBusArn: "arn:aws:events:::event-bus/${self:custom.projectEnvName}-workers"
