import editIcon from '@iconify-icons/ion/pencil-sharp';
import deleteIcon from '@iconify-icons/ion/trash-outline';
import { MouseEvent } from 'react';
import { FormattedMessage } from 'react-intl';

import { RoutesConfig } from '../../../../app/config/routes';
import { Button, ButtonVariant } from '../../../../shared/components/forms/button';
import { Icon } from '../../../../shared/components/icon';
import { Link } from '../../../../shared/components/link';
import { useGenerateLocalePath } from '../../../../shared/hooks/localePaths';
import { {{ pascalCase name }} } from '../../../../shared/services/api/{{ camelCase name }}/types';
import { Container, InlineButtons, Text } from './{{ camelCase name }}ListItem.styles';

export type {{ pascalCase name }}ListItemProps = {
  item: {{ pascalCase name }};
}

export const {{ pascalCase name }}ListItem = ({ item }: {{ pascalCase name }}ListItemProps) => {
  const generateLocalePath = useGenerateLocalePath();
  const isLoading = false;

  const handleDelete = (e: MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    // delete
  };

  const renderInlineButtons = () => (
    <InlineButtons>
      <Link
        variant={ButtonVariant.RAW}
        to={generateLocalePath(RoutesConfig.{{ camelCase name }}.edit, { id: item.id })}
        icon={<Icon size={14} icon={editIcon} />}
      >
        <FormattedMessage id="{{ pascalCase name }} list / Edit link" defaultMessage="Edit" />
      </Link>
      <Button
        variant={ButtonVariant.RAW}
        onClick={handleDelete}
        disabled={isLoading}
        icon={<Icon size={14} icon={deleteIcon} />}
      >
        <FormattedMessage id="{{ pascalCase name }} list / Delete button" defaultMessage="Delete" />
      </Button>
    </InlineButtons>
  );

  return (
    <Container>
      <Link variant={ButtonVariant.RAW} to={generateLocalePath(RoutesConfig.{{ camelCase name }}.details, { id: item.id })}>
        <Text>{item.name}</Text>
      </Link>
      {renderInlineButtons()}
    </Container>
  );
};
