import { useMutation } from '@apollo/client';
import editIcon from '@iconify-icons/ion/pencil-sharp';
import deleteIcon from '@iconify-icons/ion/trash-outline';
import { Button, ButtonVariant, Link } from '@sb/webapp-core/components/buttons';
import { FragmentType, getFragmentData } from '@sb/webapp-api-client/graphql';
import { useGenerateLocalePath } from '@sb/webapp-core/hooks';
import { Icon } from '@sb/webapp-core/components/icon';
import { MouseEvent } from 'react';
import { FormattedMessage } from 'react-intl';

import { RoutesConfig } from '../../../../app/config/routes';
import { {{ camelCase name }}ListItemDeleteMutation, {{ camelCase name }}ListItemFragment } from '../{{ camelCase name }}List.graphql';
import { Container, InlineButtons, LinkContainer, Text } from './{{ camelCase name }}ListItem.styles';

export type {{ pascalCase name }}ListItemProps = {
  item: FragmentType<typeof {{ camelCase name }}ListItemFragment>;
};

export const {{ pascalCase name }}ListItem = ({ item }: {{ pascalCase name }}ListItemProps) => {
  const generateLocalePath = useGenerateLocalePath();
  const data = getFragmentData({{ camelCase name }}ListItemFragment, item);
  const [commitDeleteMutation, { loading }] = useMutation({{ camelCase name }}ListItemDeleteMutation, {
    update(cache, { data }) {
      const deletedId = data?.delete{{ pascalCase name }}?.deletedIds?.[0];
      const normalizedId = cache.identify({ id: deletedId, __typename: '{{ pascalCase name }}Type' });
      cache.evict({ id: normalizedId });
    },
  });

  const handleDelete = (e: MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    commitDeleteMutation({
      variables: {
        input: { id: data.id },
      },
    });
  };

  const renderInlineButtons = () => (
    <InlineButtons>
      <Link
        variant={ButtonVariant.RAW}
        to={generateLocalePath(RoutesConfig.{{ camelCase name }}.edit, { id: data.id })}
        icon={<Icon size={14} icon={editIcon} />}
      >
        <FormattedMessage id="{{ pascalCase name }} list / Edit link" defaultMessage="Edit" />
      </Link>
      <Button
        variant={ButtonVariant.RAW}
        onClick={handleDelete}
        disabled={loading}
        icon={<Icon size={14} icon={deleteIcon} />}
      >
        <FormattedMessage id="{{ pascalCase name }} list / Delete button" defaultMessage="Delete" />
      </Button>
    </InlineButtons>
  );

  return (
    <Container>
      <LinkContainer>
        <Link variant={ButtonVariant.RAW} to={generateLocalePath(RoutesConfig.{{ camelCase name }}.details, { id: data.id })}>
          <Text>{data.name}</Text>
        </Link>
        {renderInlineButtons()}
      </LinkContainer>
    </Container>
  );
};
