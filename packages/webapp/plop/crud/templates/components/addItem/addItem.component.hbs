import { useMutation } from '@apollo/client';
import { FormattedMessage, useIntl } from 'react-intl';
import { useNavigate } from 'react-router';

import { RoutesConfig } from '../../../app/config/routes';
import { useSnackbar } from '../../../modules/snackbar';
import { BackButton } from '../../../shared/components/backButton';
import { useGenerateLocalePath } from '../../../shared/hooks/';
import {{ pascalCase name }}Form from '../{{ camelCase name }}Form';
import { {{ pascalCase name }}FormFields } from '../{{ camelCase name }}Form/{{ camelCase name }}Form.component';
import { {{ camelCase name }}ListItemFragment } from '../{{ camelCase name }}List/{{ camelCase name }}List.graphql';
import { add{{ pascalCase name }}Mutation } from './add{{ pascalCase name }}.graphql';
import { Container, Header } from './add{{ pascalCase name }}.styles';

export const Add{{ pascalCase name }} = () => {
  const generateLocalePath = useGenerateLocalePath();
  const { showMessage } = useSnackbar();
  const intl = useIntl();
  const navigate = useNavigate();

  const successMessage = intl.formatMessage({
    id: '{{ pascalCase name }} form / Success message',
    defaultMessage: 'ðŸŽ‰ Changes saved successfully!',
  });

  const [commit{{ pascalCase name }}FormMutation, { error, loading: loadingMutation }] = useMutation(add{{ pascalCase name }}Mutation, {
    update(cache, { data }) {
      cache.modify({
        fields: {
          {{ camelCase name }}List(existingConnection = { edges: [] }) {
            const node = data?.create{{ pascalCase name }}?.{{ camelCase name }}Edge?.node;
            if (!node) {
              return existingConnection;
            }
            const newItem = {
              node: cache.writeFragment({
                data: node,
                fragment: {{ camelCase name }}ListItemFragment,
              }),
              __typename: '{{ pascalCase name }}Edge',
            };
            return { ...existingConnection, edges: [...existingConnection.edges, newItem] };
          },
        },
      });
    },
    onCompleted: (data) => {
      const id = data?.create{{ pascalCase name }}?.{{ camelCase name }}Edge?.node?.id;

      showMessage(successMessage);
      if (id) navigate(generateLocalePath(RoutesConfig.{{ camelCase name }}.details, { id }));
    },
  });

  const onFormSubmit = (formData: {{ pascalCase name }}FormFields) => {
    commit{{ pascalCase name }}FormMutation({
      variables: {
        input: { name: formData.name },
      },
    });
  };

  return (
    <Container>
      <BackButton to={generateLocalePath(RoutesConfig.{{ camelCase name }}.list)} />
      <Header>
        <FormattedMessage defaultMessage="Add CRUD Example Item" id="{{ pascalCase name }} / Header" />
      </Header>
      <{{ pascalCase name }}Form onSubmit={onFormSubmit} error={error} loading={loadingMutation} />
    </Container>
  );
};
