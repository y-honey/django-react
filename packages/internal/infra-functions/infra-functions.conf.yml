stackName: "${self:custom.projectEnvName}-infra-functions"

iam:
  - Effect: "Allow"
    Action:
      - "s3:ListBucket"
    Resource: { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "ServerlessDeploymentBucket" } ] ] }
  - Effect: "Allow"
    Action:
      - "s3:PutObject"
    Resource:
      Fn::Join:
        - ""
        - - "arn:aws:s3:::"
          - "Ref": "ServerlessDeploymentBucket"
          - "/*"
  - Effect: "Allow"
    Action:
      - "states:StartExecution"
    Resource:
      - "${self:custom.migrationsStateMachineArn}"
  - Effect: "Allow"
    Action:
      - "codebuild:StartBuild"
    Resource:
      - "${self:custom.entrypointCodeBuildProjectArn}"

environment:
  PROJECT_NAME: ${env:PROJECT_NAME}
  ENVIRONMENT_NAME: ${self:provider.stage}
  DEPLOY_BRANCHES: ${env:SB_DEPLOY_BRANCHES}

vpc:
  securityGroupIds:
    - Fn::ImportValue: "${self:custom.projectEnvName}-lambdaSecurityGroupId"
  subnetIds:
    - Fn::ImportValue: "${self:custom.projectEnvName}-privateSubnetOneId"
    - Fn::ImportValue: "${self:custom.projectEnvName}-privateSubnetTwoId"

esbuild:
  bundle: true
  minify: true
  target: [ 'es2020' ]
  sourcemap: true
  sourcesContent: false
  tsconfig: tsconfig.app.json
  define: { 'require.resolve': undefined }
