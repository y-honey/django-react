import { generatePath } from 'react-router';
import { screen } from '@testing-library/react';
import { makeContextRenderer } from '../../../../shared/utils/testUtils';
import { {{ pascalCase name }}Details } from '../{{ camelCase name }}Details.component';
import { {{ camelCase name }}Factory } from '../../../../mocks/factories';
import { prepareState } from '../../../../mocks/store';
import { ROUTES } from '../../../../app/config/routes';

const item = {{ camelCase name }}Factory();
const items = [{{ camelCase name }}Factory(), item, {{ camelCase name }}Factory()];

const store = prepareState((state) => {
  state.{{ camelCase name }}.items = items;
});

describe('{{ pascalCase name }}Details: Component', () => {
  const component = () => <{{ pascalCase name }}Details />;
  const render = makeContextRenderer(component);

  it('should render item details', () => {
    render(
      {},
      {
        store,
        router: {
          url: `/en${generatePath(ROUTES.{{ camelCase name }}.details, { id: item.id })}`,
          routePath: `/:lang${ROUTES.{{ camelCase name }}.details}`,
        },
      }
    );
    expect(screen.getByText(`[${item.id}] ${item.name}`)).toBeInTheDocument();
  });
});
