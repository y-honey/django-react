import {rest} from 'msw';
import {
  {{ pascalCase name }}ApiGetResponseData,
  {{ pascalCase name }}ApiPostRequestData,
  {{ pascalCase name }}ApiPostResponseData,
  {{ pascalCase name }}ApiPutRequestData,
} from '../../../shared/services/api/{{ camelCase name }}/types';
import { {{ constantCase name }}_URL } from '../../../shared/services/api/{{ camelCase name }}';
const baseUrl = process.env.REACT_APP_BASE_API_URL;

export const mockGet{{ pascalCase name }}List = (response: {{ pascalCase name }}ApiGetResponseData[] = []) =>
  rest.get<void, {{ pascalCase name }}ApiGetResponseData[]>([baseUrl, {{ constantCase name }}_URL].join(''), (req, res, ctx) => {
    return res(ctx.json(response));
  });

export const mockGet{{ pascalCase name }} = (
  id = 'id',
  response: {{ pascalCase name }}ApiGetResponseData = {id: '123', name: 'name'}
) =>
  rest.get<void, {{ pascalCase name }}ApiGetResponseData>(
    [baseUrl, {{ constantCase name }}_URL, `/${id}`].join(''),
    (req, res, ctx) => {
      return res(ctx.json(response));
    }
  );

export const mockUpdate{{ pascalCase name }} = (
  id = 'id',
  response: {{ pascalCase name }}ApiPostResponseData = {isError: false, id: '123', name: 'name'},
  status = 200
) =>
  rest.put<{{ pascalCase name }}ApiPutRequestData, {{ pascalCase name }}ApiPostResponseData>(
    [baseUrl, {{ constantCase name }}_URL, `/${id}`].join(''),
    (req, res, ctx) => {
      return res(ctx.json(response), ctx.status(status));
    }
  );

export const mockAdd{{ pascalCase name }} = (
  response: {{ pascalCase name }}ApiPostResponseData = {isError: false, id: '123', name: 'name'},
  status = 200
) =>
  rest.post<{{ pascalCase name }}ApiPostRequestData, {{ pascalCase name }}ApiPostResponseData>(
    [baseUrl, {{ constantCase name }}_URL].join(''),
    (req, res, ctx) => {
      return res(ctx.json(response), ctx.status(status));
    }
  );

export const mockDelete{{ pascalCase name }} = (id = 'id', status = 204) =>
  rest.delete([baseUrl, {{ constantCase name }}_URL, `/${id}`].join(''), (req, res, ctx) => {
    return res(ctx.status(status));
  });
