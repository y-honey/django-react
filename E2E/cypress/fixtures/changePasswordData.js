import crypto from 'crypto';
import {
  COMMON_PASSWORD,
  EMPTY_INPUT,
  NUMERIC_PASSWORD,
  TOO_SHORT_PASSWORD,
  VALID_PASSWORD,
} from './signupData';
import {
  COMMON,
  COMMON_PASSWORD_ERROR_TEXT,
  EMPTY,
  EMPTY_CONFIRM_PASSWORD_ERROR_TEXT,
  EMPTY_NEW_PASSWORD_ERROR_TEXT,
  EMPTY_OLD_PASSWORD_ERROR_TEXT,
  NUMERIC,
  NUMERIC_PASSWORD_ERROR_TEXT,
  PASSWORDS_MUST_MATCH_ERROR_TEXT,
  TOO_SHORT,
  TOO_SHORT_PASSWORD_ERROR_TEXT,
  VALID,
  WRONG_OLD_PASSWORD_ERROR_TEXT,
} from '../support/assertion';

import API_ERROR_CODES from './apiErrorCodes';

const NEW_PASSWORD = crypto.randomBytes(10).toString('hex');
const {
  numericNewPasswordApiError,
  wrongOldPasswordApiError,
  commonNewPasswordApiError,
} = API_ERROR_CODES;

export default [
  {
    oldPassword: VALID_PASSWORD,
    oldPasswordState: VALID,
    newPassword: NEW_PASSWORD,
    newPasswordState: VALID,
    confirmPassword: TOO_SHORT_PASSWORD,
    confirmPasswordState: TOO_SHORT,
    errorText: [PASSWORDS_MUST_MATCH_ERROR_TEXT],
  },
  {
    oldPassword: VALID_PASSWORD,
    oldPasswordState: VALID,
    newPassword: NEW_PASSWORD,
    newPasswordState: VALID,
    confirmPassword: EMPTY_INPUT,
    confirmPasswordState: EMPTY,
    errorText: [EMPTY_CONFIRM_PASSWORD_ERROR_TEXT],
  },
  {
    oldPassword: VALID_PASSWORD,
    oldPasswordState: VALID,
    newPassword: COMMON_PASSWORD,
    newPasswordState: COMMON,
    confirmPassword: COMMON_PASSWORD,
    confirmPasswordState: COMMON,
    errorText: [COMMON_PASSWORD_ERROR_TEXT],
    apiErrorCode: commonNewPasswordApiError,
  },
  {
    oldPassword: VALID_PASSWORD,
    oldPasswordState: VALID,
    newPassword: TOO_SHORT_PASSWORD,
    newPasswordState: TOO_SHORT,
    confirmPassword: TOO_SHORT_PASSWORD,
    confirmPasswordState: TOO_SHORT,
    errorText: [TOO_SHORT_PASSWORD_ERROR_TEXT],
  },
  {
    oldPassword: VALID_PASSWORD,
    oldPasswordState: VALID,
    newPassword: NUMERIC_PASSWORD,
    newPasswordState: NUMERIC,
    confirmPassword: NUMERIC_PASSWORD,
    confirmPasswordState: NUMERIC,
    errorText: [NUMERIC_PASSWORD_ERROR_TEXT],
    apiErrorCode: numericNewPasswordApiError,
  },
  {
    oldPassword: VALID_PASSWORD,
    oldPasswordState: VALID,
    newPassword: EMPTY_INPUT,
    newPasswordState: EMPTY,
    confirmPassword: EMPTY_INPUT,
    confirmPasswordState: EMPTY,
    errorText: [EMPTY_NEW_PASSWORD_ERROR_TEXT, EMPTY_CONFIRM_PASSWORD_ERROR_TEXT],
  },
  {
    oldPassword: VALID_PASSWORD,
    oldPasswordState: VALID,
    newPassword: EMPTY_INPUT,
    newPasswordState: EMPTY,
    confirmPassword: VALID_PASSWORD,
    confirmPasswordState: VALID,
    errorText: [EMPTY_NEW_PASSWORD_ERROR_TEXT, PASSWORDS_MUST_MATCH_ERROR_TEXT],
  },
  {
    oldPassword: TOO_SHORT_PASSWORD,
    oldPasswordState: TOO_SHORT,
    newPassword: VALID_PASSWORD,
    newPasswordState: VALID,
    confirmPassword: VALID_PASSWORD,
    confirmPasswordState: VALID,
    errorText: [WRONG_OLD_PASSWORD_ERROR_TEXT],
    apiErrorCode: wrongOldPasswordApiError,
  },
  {
    oldPassword: EMPTY_INPUT,
    oldPasswordState: EMPTY,
    newPassword: VALID_PASSWORD,
    newPasswordState: VALID,
    confirmPassword: VALID_PASSWORD,
    confirmPasswordState: VALID,
    errorText: [EMPTY_OLD_PASSWORD_ERROR_TEXT],
  },
  {
    oldPassword: EMPTY_INPUT,
    oldPasswordState: EMPTY,
    newPassword: EMPTY_INPUT,
    newPasswordState: EMPTY,
    confirmPassword: EMPTY_INPUT,
    confirmPasswordState: EMPTY,
    errorText: [
      EMPTY_OLD_PASSWORD_ERROR_TEXT,
      EMPTY_NEW_PASSWORD_ERROR_TEXT,
      EMPTY_CONFIRM_PASSWORD_ERROR_TEXT,
    ],
  },
  {
    oldPassword: EMPTY_INPUT,
    oldPasswordState: EMPTY,
    newPassword: EMPTY_INPUT,
    newPasswordState: EMPTY,
    confirmPassword: VALID_PASSWORD,
    confirmPasswordState: VALID,
    errorText: [EMPTY_OLD_PASSWORD_ERROR_TEXT, EMPTY_NEW_PASSWORD_ERROR_TEXT],
  },
];
