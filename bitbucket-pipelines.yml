clone:
  depth: full

definitions:
  services:
    docker:
      memory: 7128
  caches:
    pnpmbackend: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpmwebapp: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpmworkers: $BITBUCKET_CLONE_DIR/.pnpm-store
    clis: ~/.clicache
    sonar: ~/.sonar/cache

  scripts:
    initializeStep: &initializeStep
                      cp .env.test .env
                      && echo "VERSION=test >> .env"
                      && npm -g config set user root
                      && npm i -g nx@^15.4.5 pnpm@^7.25.0
    setupAwsCli: &setupAwsCli
                   export AWS_CLI_VERSION=2.8.8
                   export AWS_CLI_DEST_PATH=~/.clicache/awscli-${AWS_CLI_VERSION}.zip
                   mkdir -p AWS_CLI_DEST_PATH
                   && wget --no-verbose --no-clobber "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip" \
                   && --output-document "${AWS_CLI_DEST_PATH}" || true
                   && unzip "${AWS_CLI_DEST_PATH}"
                   && rm "${AWS_CLI_DEST_PATH}"
                   && /bin/sh ./aws/install
                   && aws --version
    installWebappDeps: &installWebappDeps
                         pnpm install
                         --include-workspace-root
                         --frozen-lockfile
                         --filter=!e2e-tests
                         --filter=!docs
                         --filter=!status-dashboard
                         --filter=!local-ws-server

pipelines:
  default:
    - parallel:
        - step:
            name: Push code to CodeCommit
            clone:
              depth: full
            script:
              - git remote add codecommit "$CODE_COMMIT_REPO"
              - git push --force -u codecommit "$BITBUCKET_BRANCH"
              - git push codecommit --tags --force

        - step:
            name: Lint & test web app
            image: atlassian/default-image:3
            condition:
              changesets:
                includePaths:
                  - "packages/webapp/**"
            size: 2x
            script:
              - *initializeStep
              - *installWebappDeps
              - nx run webapp:lint
              - nx run webapp:test --watchAll=false --maxWorkers=20%
              - pipe: sonarsource/sonarcloud-scan:1.4.0
                variables:
                  SONAR_TOKEN: ${SONAR_TOKEN}
                  EXTRA_ARGS: '-Dsonar.projectBaseDir=packages/webapp'
            caches:
              - pnpmwebapp
              - clis
              - sonar
        - step:
            name: Build web app
            image: atlassian/default-image:3
            condition:
              changesets:
                includePaths:
                  - "packages/webapp/**"
            script:
              - *initializeStep
              - *installWebappDeps
              - nx run webapp:build:app
            caches:
              - pnpmwebapp
              - clis

        - step:
            name: Test backend
            image: atlassian/default-image:3
            size: 2x
            condition:
              changesets:
                includePaths:
                  - "packages/backend/**"
            script:
              - *initializeStep
              - *setupAwsCli
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=core
                --filter=tools
              - nx run backend:test
              - pipe: sonarsource/sonarcloud-scan:1.4.0
                variables:
                  SONAR_TOKEN: ${SONAR_TOKEN}
                  EXTRA_ARGS: '-Dsonar.projectBaseDir=packages/backend'
            services:
              - docker
            caches:
              - docker
              - pnpmbackend
              - clis
              - sonar

        - step:
            name: Test async-workers
            image: atlassian/default-image:3
            size: 2x
            condition:
              changesets:
                includePaths:
                  - "packages/workers/**"
            script:
              - *initializeStep
              - *setupAwsCli
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=core
                --filter=tools
              - nx run workers:test
              - pipe: sonarsource/sonarcloud-scan:1.4.0
                variables:
                  SONAR_TOKEN: ${SONAR_TOKEN}
                  EXTRA_ARGS: '-Dsonar.projectBaseDir=packages/workers'
            services:
              - docker
            caches:
              - docker
              - pnpmworkers
              - clis
              - sonar
