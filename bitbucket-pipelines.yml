clone:
  depth: full

definitions:
  services:
    docker:
      memory: 7128
  caches:
    pnpmbackend: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpmdocs: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpmwebapp: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpmworkers: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpminfracore: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpminfrashared: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpminfrafunctions: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpmstatusdashboard: $BITBUCKET_CLONE_DIR/.pnpm-store
    pnpmtools: $BITBUCKET_CLONE_DIR/.pnpm-store
    clis: ~/.clicache
    sonar: ~/.sonar/cache

  scripts:
    initializeStep: &initializeStep cp .env.test .env
      && corepack enable
      && corepack prepare pnpm@7.25.0 --activate
      && export PNPM_HOME="/root/.local/share/pnpm"
      && export PATH="$PNPM_HOME:$PATH"

    setupAwsCli: &setupAwsCli
      export AWS_CLI_DEST_PATH=~/.clicache/awscli-2.8.8.zip
      && mkdir -p ~/.clicache/
      && wget --no-verbose --no-clobber "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-2.8.8.zip" --output-document "${AWS_CLI_DEST_PATH}" || true
      && unzip -qq "${AWS_CLI_DEST_PATH}"
      && /bin/bash ./aws/install
      && aws --version
    installWebappDeps: &installWebappDeps pnpm install
      --include-workspace-root
      --frozen-lockfile
      --filter=webapp...

pipelines:
  default:
    - parallel:
        - step:
            name: Push code to CodeCommit
            clone:
              depth: full
            script:
              - git remote add codecommit "$CODE_COMMIT_REPO"
              - git push --force -u codecommit "$BITBUCKET_BRANCH"
              - git push codecommit --tags --force

        - step:
            name: 'web-app: Lint & test'
            image: atlassian/default-image:4
            size: 2x
            script:
              - *initializeStep
              - *installWebappDeps
              - node_modules/.bin/nx run webapp:lint
              - node_modules/.bin/nx run webapp:test --watchAll=false --maxWorkers=20% --coverage
              - pipe: sonarsource/sonarcloud-scan:1.4.0
                variables:
                  SONAR_TOKEN: ${SONAR_TOKEN}
                  EXTRA_ARGS: '-Dsonar.projectBaseDir=packages/webapp'
            caches:
              - pnpmwebapp
              - clis
              - sonar
        - step:
            name: 'web-app: Build'
            image: atlassian/default-image:4
            script:
              - *initializeStep
              - *installWebappDeps
              - node_modules/.bin/nx run webapp:build:app
            caches:
              - pnpmwebapp
              - clis

        - step:
            name: 'backend: Build image & run tests'
            image: atlassian/default-image:3
            size: 2x
            script:
              - *initializeStep
              - *setupAwsCli
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=backend...
              - node_modules/.bin/nx run backend:lint:js
              - node_modules/.bin/nx run backend:test
              - pipe: sonarsource/sonarcloud-scan:1.4.0
                variables:
                  SONAR_TOKEN: ${SONAR_TOKEN}
                  EXTRA_ARGS: '-Dsonar.projectBaseDir=packages/backend'
            services:
              - docker
            caches:
              - docker
              - pnpmbackend
              - clis
              - sonar

        - step:
            name: 'async-workers: Lint & test'
            image: atlassian/default-image:3
            size: 2x
            script:
              - *initializeStep
              - *setupAwsCli
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=workers...
              - node_modules/.bin/nx run workers:lint
              - node_modules/.bin/nx run workers:test
              - pipe: sonarsource/sonarcloud-scan:1.4.0
                variables:
                  SONAR_TOKEN: ${SONAR_TOKEN}
                  EXTRA_ARGS: '-Dsonar.projectBaseDir=packages/workers'
            services:
              - docker
            caches:
              - docker
              - pnpmworkers
              - clis
              - sonar
        - step:
            name: 'async-workers: Build'
            image: atlassian/default-image:3
            size: 2x
            script:
              - *initializeStep
              - *setupAwsCli
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=workers...
                --filter=webapp...
              - node_modules/.bin/nx run webapp:build:emails
              - node_modules/.bin/nx run workers:build
            services:
              - docker
            caches:
              - docker
              - pnpmworkers
              - clis
              - sonar

        # Infra steps

        - step:
            name: 'infra/infra-core: Lint & build'
            image: atlassian/default-image:4
            script:
              - *initializeStep
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=infra-core...
              - node_modules/.bin/nx run infra-core:lint
              - node_modules/.bin/nx run infra-core:build
            caches:
              - pnpminfracore
              - clis

        - step:
            name: 'infra/infra-shared: Lint & build'
            image: atlassian/default-image:4
            script:
              - *initializeStep
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=infra-shared...
              - node_modules/.bin/nx run infra-shared:lint
              - node_modules/.bin/nx run infra-shared:build
            caches:
              - pnpminfrashared
              - clis

        - step:
            name: 'infra/infra-functions: Lint & build'
            image: atlassian/default-image:4
            script:
              - *initializeStep
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=infra-functions...
              - node_modules/.bin/nx run infra-functions:lint
              - node_modules/.bin/nx run infra-functions:build
            caches:
              - pnpminfrafunctions
              - clis

        # Internal steps

        - step:
            name: 'internal/docs: Lint & build'
            image: atlassian/default-image:4
            script:
              - *initializeStep
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=docs...
              - node_modules/.bin/nx run docs:lint
              - node_modules/.bin/nx run docs:build
            caches:
              - pnpmdocs
              - clis
        - step:
            name: 'internal/status-dashboard: Lint & build'
            image: atlassian/default-image:4
            script:
              - *initializeStep
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=status-dashboard...
              - node_modules/.bin/nx run status-dashboard:lint
              - node_modules/.bin/nx run status-dashboard:build
            caches:
              - pnpmstatusdashboard
              - clis

        - step:
            name: 'internal/tools: Lint'
            image: atlassian/default-image:4
            script:
              - *initializeStep
              - pnpm install
                --include-workspace-root
                --frozen-lockfile
                --filter=tools...
              - node_modules/.bin/nx run tools:lint
            caches:
              - pnpmtools
              - clis