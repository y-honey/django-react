version: '3.4'

volumes:
  web_backend_db_data:
    external:
      name: "${PROJECT_NAME}-web-backend-db-data"
  web_backend_staticfiles: {}

services:
  db:
    volumes:
      - web_backend_db_data:/var/lib/postgresql/data

  backend:
    volumes:
      - ./services/backend/:/app
    env_file:
      - ./services/backend/.env
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - WORKERS_EVENT_BUS_NAME=${PROJECT_NAME}-${ENV_STAGE}-workers
    depends_on:
      - db
      - localstack
      - mailcatcher

  localstack:
    image: localstack/localstack:0.11.3
    ports:
      - "4566:4566"
    environment:
      - SERVICES=serverless,events,cloudformation,ses,secretsmanager
      - DEFAULT_REGION=eu-west-1
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOTE_DOCKER=true
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - HOST_TMP_FOLDER=/tmp
    volumes:
      - "/tmp/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    privileged: true
    depends_on:
      - db
    links:
      - db

  mailcatcher:
    build: ./tools/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"
    restart: always

  ssmeditor:
    stdin_open: true
    tty: true
    build:
      context: ./tools/ssm-editor
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
      - AWS_SECURITY_TOKEN=${AWS_SECURITY_TOKEN}
      - AWS_SESSION_EXPIRATION=${AWS_SESSION_EXPIRATION}
      - PROJECT_ENV_NAME=${PROJECT_ENV_NAME}
      - CHAMBER_SERVICE=${CHAMBER_SERVICE}

